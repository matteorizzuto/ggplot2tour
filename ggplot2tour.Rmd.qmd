---
title: "ggplot2"
subtitle: "Navigating the Grammar of Graphics"
author: "Matteo Rizzuto, Ph.D."
date: '`r format(Sys.Date(), "%B %d, %Y")`'
slide-number: c/t
code-link: true
fig-responsive: true
footnotes-hover: true
bibliography: bibliography.bib
title-slide-attributes:
  data-background-image: images/overview_cedricscherer.png
  data-background-size: contain
  data-background-opacity: "0.25"
format: 
  revealjs:
    theme: default
    transition: fade
    incremental: true
    toc: true
    toc-title: "Roadmap"
    toc-depth: 1
    css: style.css
    code-overflow: wrap
    code-block-bg: false
    code-line-numbers: true
---

# Introduction

## What is the grammar of graphics?

:::{.r-stack}
:::{.fragment .fade-out}
:::{.callout-note}
## Grammar

from ancient Greek **_γράμμα_**, _letter_. It is a set of rules to produce statements that make sense in a language.
:::
:::

:::{.fragment .fade-in}
:::{.callout-note}
## Grammar of Graphics

A set of rules that, combined, allows us to build graphics to answer our question about the data
:::
:::
:::

:::{.fragment .fade-in}
:::{.callout-tip}
## Fun fact

Grammar, **_γράμμα_**, shares the same root as **_γραφικός_**, _graphics_, and **_γραφή_**, which means _to draw_ or _to paint_ or _to write_
:::
:::

:::{.fragment .fade-in}
:::{.callout-warning}
The grammar of graphics does not tell you which graphic to use
:::
:::

---
:::{.fragment .fade-in}
![](images/Tughra_Suleiman.jpeg){width=75% fig-align="center"}
:::

## ggplot2: quick facts {.incremental .smaller }

* Who?
  + Hadley Wickham, Chief Scientist at RStudio, Inc.
* What?
  + an implementation of the Grammar of Graphics [@Wilkinson2012] in R 
* Why?
  + to give a _framework_ to graphics production in R that allows for easy editing, extension, and **layering**
* When?
  + started in 2005, now at version 3.3.5
* Where?
  + in R, but also in Python

## Elements of a ggplot {.smaller .incremental}

:::{.fragment}
Lists of elements about. I tend to view these as the **core** ones

* Data 
* Geometries
* Aesthetics
* Scales
* Facets
* Themes
:::

:::{.fragment .fade-in}
Other, **additional** elements are:

* Statistical transformation
* Coordinates
:::

:::{.fragment .fade-in}
Though I personally use them **much less often** that the others
:::

## An example

:::{.r-stack}
:::{.fragment .fade-out}
```{r}
#| echo: false
#| fig-width: 9
#| fig-dpi: 300
#| fig-align: center
#| fig-asp: 0.7
#| fig-alt: "A box-and-whiskers plot of flipper length in millimeters by penguin species."
#| layout-valign: center
library(tidyverse)
library(palmerpenguins)

ggplot(data = penguins,
       aes(x = species, 
           y = flipper_length_mm)) + 
  geom_boxplot(aes(color = species)) +
  geom_jitter(aes(color = species))
```
:::

:::{.fragment .fade-in}
```{r}
#| echo: false
#| fig-width: 9
#| fig-dpi: 300
#| fig-align: center
#| fig-asp: 0.7
#| fig-alt: "A box-and-whiskers plot of flipper length in millimeters by penguin species."
#| layout-valign: center
library(tidyverse)
library(palmerpenguins)

ggplot(data = penguins,
       aes(x = species, 
           y = flipper_length_mm)) + 
  geom_boxplot(aes(color = species), 
               width = 0.3, 
               show.legend = FALSE) +
  geom_jitter(aes(color = species), 
              alpha = 0.5, 
              show.legend = FALSE, 
              position = position_jitter(width = 0.2, 
                                         seed = 0)) +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(x = "Species",
       y = "Flipper length (mm)") + 
  theme_classic()
```
:::
:::

# ggplot2—Basics

## Essentials

## Aesthetics

## Theming

## Faceting

## All together now!

# ggplot2—Beyond Basics


